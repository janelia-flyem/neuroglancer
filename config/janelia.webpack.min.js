
'use strict';
const webpack_helpers = require('./webpack_helpers');
const resolveReal = require('./resolve_real');
const path = require('path');
const WebpackShellPlugin = require('webpack-shell-plugin');
const webpack = require('webpack');


const dest = path.resolve(__dirname, '../dist/janelia-min');

const config = webpack_helpers.getViewerConfig(
  { outputPath: dest,
    supportedLayers: [
      'neuroglancer/segmentation_metric_user_layer',

    ].concat(webpack_helpers.DEFAULT_SUPPORTED_LAYERS)
  , minify: true,
});

const janelia_packagejson = resolveReal(__dirname, '../janelia-package.json');
config.push(Object.assign(
  {
    entry: {'package': janelia_packagejson},
    target: 'web',
  },
  webpack_helpers.getBaseConfig({
    outputPath: dest,
    filename: "[name].json"
})));

//tar up the results
const version = require(janelia_packagejson).version;
const CREATE_ARCHIVE = `cd dist/janelia-min/ && tar -czvf dist-${version}.tar.gz .`

config[1].plugins.push(
    new webpack.optimize.OccurrenceOrderPlugin(),
    //.. other plugins,
    new WebpackShellPlugin({
      onBuildExit: [CREATE_ARCHIVE],
      safe: true
    })
  )

module.exports = config

